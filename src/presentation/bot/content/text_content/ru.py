from typing import Optional

from src.application.read_current_basket.dto import PreparedBasketProduct
from src.domain.order.entities.order import OrderId, Location
from src.domain.order.entities.order_view import ReadAdminOrderProduct, ReadUserOrderProduct
from src.domain.product.constants.product import ProductMode
from src.domain.product.entities.product import ProductName, ProductDescription
from src.domain.product.entities.product_view import AdminProductPrice
from src.domain.restaurant.constants.constants import MenuProductStatus
from src.domain.user.constants.user import Language
from src.presentation.bot.content.content_enums import ExistingTypes
from src.presentation.bot.content.format.format_manager import FormatManager
from src.presentation.bot.content.text_content.constants import ConcretePaymentType
from src.presentation.bot.content.text_content.interfaces import IText
from src.presentation.bot.states.state_data.product import (
    ProductNameData, ProductDescriptionData, ProductPriceData, ProductPriceNameData,
)


class RussianText(IText):
    language = Language.ru

    def __init__(self, format: FormatManager):
        self.format = format

    def user_promoted_to_admin(self, mention: str) -> str:
        return f"–ù–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! {mention}"

    def admin_restricted_to_user(self, mention: str) -> str:
        return f"–£—á–∞—Å—Ç–Ω–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤! {mention}"

    def administrators_updated(self) -> str:
        return "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!"

    def greeting(self) -> str:
        return (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç SUSHI MASTER!\n\n"
            "–ù–∞–±–µ—Ä—ë–º —á–µ–≥–æ-–Ω–∏–±—É–¥—å –≤–∫—É—Å–Ω–µ–Ω—å–∫–æ–≥–æ? üòã"
        )

    def restaurant_info(self, name: str, description: str) -> str:
        return f"<b>{name}</b>\n{description}"

    def location_address(self, address: str) -> str:
        return f"üìç–§–∏–ª–∏–∞–ª: <b>{address}</b>"

    def profile_settings_text(self, name: str, phone: Optional[str], language: Language) -> str:
        return (f"<b>–§.–ò.–û</b>: {name}\n<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone if phone else '–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏...'}\n"
                f"<b>–Ø–∑—ã–∫:</b> üá∑üá∫ {language}")

    def input_name(self) -> str:
        return "–í–≤–µ–¥–∏—Ç–µ –§.–ò.–û. üëá"

    def input_phone(self) -> str:
        return (
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üëá\n\n–ú–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å ¬´üì± –ú–æ–π –Ω–æ–º–µ—Ä¬ª –∏–ª–∏\n"
            "–≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +998901234567"
        )

    def input_language(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ üëá"

    def greeting_administrator(self) -> str:
        return "–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!"

    def choose_something(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö"

    def categories(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é üëá"

    def uploading_product(
            self, photo: str, name: list[ProductNameData],
            description: Optional[list[ProductDescriptionData]],
            price: list[ProductPriceData],
    ) -> str:
        product_name = self.format(ExistingTypes.Text).format_product_names(names=name)
        product_description = self.format(ExistingTypes.Text).format_product_descriptions(descriptions=description)
        product_price = self.format(ExistingTypes.Text).format_product_prices(prices=price)
        return (
            f"{'<b>–§–æ—Ç–æ:</b> –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ ...' if photo is None else ''}\n"
            f"{'<b>–ò–º—è:</b> –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ ...' if len(name) == 0 else product_name}\n\n"
            f"{'<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ ...' if len(description) == 0 else product_description}\n\n"
            f"{'<b>–¶–µ–Ω–∞:</b> –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ ...' if len(price) == 0 else product_price}"
        )

    def upload_photo_text(self) -> str:
        return "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ:"

    def upload_name_text(self, language: Language) -> str:
        return f"–í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–∞ {language} —è–∑—ã–∫–µ:"

    def upload_description_text(self, language: Language) -> str:
        return f"–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {language} —è–∑—ã–∫–µ:"

    def upload_price_text(self) -> str:
        return "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É:"

    def upload_price_name_text(self, language: Language) -> str:
        return f"–í–≤–µ–¥–∏—Ç–µ –≤–∏–¥ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ {language} —è–∑—ã–∫–µ:"

    def choose_mode(self) -> str:
        return ("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞:\n\n"
                "–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–µ–π —Ç–æ–≤–∞—Ä–∞ —É "
                "–Ω–µ–≥–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏–±–æ <i>–Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–µ–Ω</i> –ª–∏–±–æ <i>–æ–¥–Ω–∞ —Ü–µ–Ω–∞</i>.\n"
                "<i><b>–û–±—ã—á–Ω—ã–π</b></i> —Ç–∏–ø —ç—Ç–æ —Ç–æ–≤–∞—Ä —Å –æ–¥–Ω–æ–π —Ü–µ–Ω–æ–π.\n"
                "<i><b>–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π</b></i> —ç—Ç–æ —Ç–æ–≤–∞—Ä —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π("
                "–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–æ–≥—É—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å—Å—è —Ä–∞–∑–º–µ—Ä–æ–º —Ç–æ–≤–∞—Ä–∞ "
                "–∏–ª–∏ –¥–æ–±–∞–≤–∫–∞–º–∏.)")

    def finish_create_product(self) -> str:
        return "–ü—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω! ‚úÖ"

    def category_not_found_in_add_product(self) -> str:
        return "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!"

    def name_not_found_in_add_product(self) -> str:
        return "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!"

    def description_not_full(self) -> str:
        return "–í –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ –≤—Å–µ —è–∑—ã–∫–∏, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–æ –∫–æ–Ω—Ü–∞!"

    def price_is_empty(self) -> str:
        return "–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –ø—É—Å—Ç–∞!"

    def price_name_not_found_in_add_product(self) -> str:
        return "–í –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–∏ –≤–∏–¥–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –Ω–µ –≤—Å–µ —è–∑—ã–∫–∏, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–æ –∫–æ–Ω—Ü–∞!"

    def choose_branch(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å üëá"

    def location_id_not_found(self) -> str:
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –Ω–∞–∂–º–∏—Ç–µ /admin –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ –Ω–æ–≤–æ–π"

    def something_went_wrong(self) -> str:
        return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ /admin –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ –Ω–æ–≤–æ–π"

    def category_products_empty(self) -> str:
        return "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"

    def admin_product(
            self, name: list[ProductName], description: Optional[list[ProductDescription]],
            mode: ProductMode, price: list[AdminProductPrice], menu_product_status: MenuProductStatus,
    ) -> str:
        product_name = [ProductNameData(name=n.name, language=n.language) for n in name]
        product_description = [
            ProductDescriptionData(
                description=d.description,
                language=d.language,
            ) for d in description
        ]
        if len(price) > 1:
            product_price = [ProductPriceData(
                id=p.id, price=p.price, name=[ProductPriceNameData(
                    name=n.name, language=n.language,
                ) for n in p.name]) for p in price]
        else:
            product_price = [ProductPriceData(id=p.id, price=p.price, name=[]) for p in price]
        formatted_name = self.format(ExistingTypes.Text).format_product_names(product_name)
        formatted_description = self.format(ExistingTypes.Text).format_product_descriptions(product_description)
        if formatted_description != "":
            formatted_description += "\n\n"
        formatted_price = self.format(ExistingTypes.Text).format_product_prices(product_price)
        return (
            f"{formatted_name}\n\n"
            f"{formatted_description}"
            f"{formatted_price}"
        )

    def price_must_be_integer(self) -> str:
        return "–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ"

    def list_is_empty(self) -> str:
        return "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"

    def change_menu_product_status_call_answer(self, status: MenuProductStatus) -> str:
        if status == MenuProductStatus.available:
            return "‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–æ–¥—É–∫—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
        else:
            return "‚õîÔ∏è –¢–µ–ø–µ—Ä—å –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"

    def access_delete_product(self) -> str:
        return "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞?"

    # user
    def choose_order_method(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞ üëá"

    def send_location_in_pickup(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª –ª–∏–±–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–∫–∞—Ü–∏—é –∏ –º—ã –æ–ø—Ä–µ–¥–µ–ª–∏–º –±–ª–∏–∂–∞–π—à–∏–π –∫ –≤–∞–º üëá"

    def send_location_in_shipping(self) -> str:
        return (
            "üìç –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–∫–∞—Ü–∏—é –ª–∏–±–æ –≤—ã–±–µ—Ä–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ üëá\n\n"
            "<i>–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –≥–æ—Ä–æ–¥–∞ –Ω–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è. –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç 40 –º–∏–Ω—É—Ç</i>"
        )

    def show_webapp_button_in_pick_up(self, address: str) -> str:
        return f"–§–∏–ª–∏–∞–ª <b>{address}</b>"

    def show_webapp_button_in_shipping(self, address: str) -> str:
        return f"<b>–í–∞—à –∞–¥—Ä–µ—Å</b>\n\n{address}"

    def restaurant_address_not_found(self) -> str:
        return "–ê–¥—Ä–µ—Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚õîÔ∏è"

    def user_address_not_found(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, –µ—Å–ª–∏ –æ–Ω–∏ —Ç–∞–º –µ—Å—Ç—å ‚õîÔ∏è"

    def get_comment(self) -> str:
        return (
            "–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∞–¥—Ä–µ—Å—É.\n"
            "<b>–ù–∞–ø—Ä–∏–º–µ—Ä:</b> ‚Ññ –ø–æ–¥—ä–µ–∑–¥–∞, —ç—Ç–∞–∂, –∫–æ–¥ –æ—Ç –¥–≤–µ—Ä–∏, ‚Ññ –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏ —Ç–¥..."
        )

    def get_phone(self) -> str:
        return (
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n–≤ —Ñ–æ—Ä–º–∞—Ç–µ: +998** *** ** **\n\n"
            "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ï—Å–ª–∏ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑ –æ–Ω–ª–∞–π–Ω —Å –ø–æ–º–æ—â—å—é Click –ª–∏–±–æ Payme,"
            "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω "
            "–∞–∫–∫–∞—É–Ω—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Å–µ—Ä–≤–∏—Å–µ"
        )

    def accept_order_pickup(
            self, phone: str, products: list[PreparedBasketProduct], total_amount: int,
    ) -> str:
        return (
            f"<b>–í–∞—à –∑–∞–∫–∞–∑:</b>\n\n<b>–¢–∏–ø –∑–∞–∫–∞–∑–∞:</b> üö∂ –°–∞–º–æ–≤—ã–≤–æ–∑\n"
            f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}\n"
            f"{self.format(ExistingTypes.Text).format_products_view(products=products, currency_name='—Å—É–º')}"
            f"\n\n<b>–ò—Ç–æ–≥–æ  ‚Äî {self.format(ExistingTypes.Text).format_product_price(total_amount)} "
            f"—Å—É–º</b>\n\n–í—Å–µ –≤–µ—Ä–Ω–æ?"
        )

    def accept_order_shipping(
            self, comment: str, phone: str, address: str, shipping_length: float,
            products: list[PreparedBasketProduct], amount: int, shipping_amount: int,
            total_amount: int,
    ) -> str:
        return (
            f"<b>–í–∞—à –∑–∞–∫–∞–∑:</b>\n\n<b>"
            f"–¢–∏–ø –∑–∞–∫–∞–∑–∞:</b> üõµ –î–æ—Å—Ç–∞–≤–∫–∞\n"
            f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}\n"
            f"<b>–ê–¥—Ä–µ—Å:</b> {address}\n"
            f"<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}\n"
            f"{self.format(ExistingTypes.Text).format_products_view(products=products, currency_name='—Å—É–º')}"
            f"\n\n<b>–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {self.format(ExistingTypes.Text).format_product_price(amount)} —Å—É–º</b>"
            f"\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äî {self.format(ExistingTypes.Text).format_product_price(shipping_amount)} —Å—É–º"
            f"\n<i>–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ñ–∏–ª–∏–∞–ª–∞: {shipping_length} –∫–º</i>"
            f"\n\n<b>–ò—Ç–æ–≥–æ  ‚Äî {self.format(ExistingTypes.Text).format_product_price(total_amount)} —Å—É–º</b>"
            f"\n\n–í—Å–µ –≤–µ—Ä–Ω–æ?"
        )

    def choose_type_charge(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá"

    def send_url_for_charge_payme(self, total_amount: str, order_id: OrderId) -> str:
        return (
            f"–û–ø–ª–∞—Ç–∞ <b>Payme</b> –Ω–∞ —Å—É–º–º—É <b>{total_amount}</b> —Å—É–º.\n"
            f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ <b>#{order_id}</b>\n"
            f"–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá"
        )

    def send_url_for_charge_click(self, total_amount: str, order_id: OrderId) -> str:
        return (
            f"–û–ø–ª–∞—Ç–∞ <b>Click</b> –Ω–∞ —Å—É–º–º—É <b>{total_amount}</b> —Å—É–º.\n"
            f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ <b>#{order_id}</b>\n"
            f"–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá"
        )

    def successfully_payment(self) -> str:
        return "‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"

    def send_finish_order_presentation_pickup(
            self, order_id: OrderId, products: list[ReadUserOrderProduct],
            total_amount: int,
    ) -> str:
        return (
            f"–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ 20 –º–∏–Ω—É—Ç. –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ #{order_id}.\n"
            f"{self.format(ExistingTypes.Text).format_products_view_user(products=products, currency_name='—Å—É–º')}"
            f"\n\n<b>–ò—Ç–æ–≥–æ  ‚Äî {self.format(ExistingTypes.Text).format_product_price(total_amount)} —Å—É–º</b>"
            f"\n\n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!"
        )

    def send_finish_order_presentation_shipping(
            self, order_id: OrderId, products: list[ReadUserOrderProduct],
            shipping_amount: int, total_amount: int,
    ) -> str:
        return (
            f"–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –∏ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ä–æ–∫. –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ #{order_id}.\n"
            f"{self.format(ExistingTypes.Text).format_products_view_user(products=products, currency_name='—Å—É–º')}"
            f"\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äî {self.format(ExistingTypes.Text).format_product_price(shipping_amount)} —Å—É–º"
            f"\n<b>–ò—Ç–æ–≥–æ  ‚Äî {self.format(ExistingTypes.Text).format_product_price(total_amount)} —Å—É–º</b>"
            f"\n\n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!"
        )

    def send_order_to_admins_pickup(
            self, order_id: OrderId, products: list[ReadAdminOrderProduct],
            first_name: str, phone: str, payment_type: ConcretePaymentType, total_amount: int,
    ):
        return (
            f"<b>–ó–∞–∫–∞–∑ #{order_id}</b> ‚Äî üö∂ –°–∞–º–æ–≤—ã–≤–æ–∑\n"
            f"{self.format(ExistingTypes.Text).format_products_view_admin(products=products)}\n\n"
            f"<b>–§.–ò.–û:</b> {first_name}\n"
            f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}\n"
            f"<b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> {payment_type}\n\n"
            f"<b>–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞:</b> {self.format(ExistingTypes.Text).format_product_price(total_amount)} —Å—É–º"
        )

    def send_order_to_admins_shipping(
            self, order_id: OrderId, products: list[ReadAdminOrderProduct],
            first_name: str, phone: str, payment_type: ConcretePaymentType, address: str, comment: str,
            shipping_amount: int, total_amount: int, user_location: Location,
    ):
        return (
            f"<b>–ó–∞–∫–∞–∑ #{order_id}</b> ‚Äî üö∂ –°–∞–º–æ–≤—ã–≤–æ–∑\n"
            f"{self.format(ExistingTypes.Text).format_products_view_admin(products=products)}\n\n"
            f"<b>–§.–ò.–û:</b> {first_name}\n"
            f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}\n"
            f"<b>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> {payment_type}\n"
            f"<b>–ê–¥—Ä–µ—Å:</b> {address}\n"
            f"<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}\n\n"
            f"<b>–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞:</b> {self.format(ExistingTypes.Text).format_product_price(total_amount)} —Å—É–º\n\n"
            f"<b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> {self.format(ExistingTypes.Text).format_product_price(shipping_amount)} —Å—É–º"
        )

    def accept_order_pickup_by_admin(self, order_id: OrderId) -> str:
        return (f"–ó–∞–∫–∞–∑ #{order_id} –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è. "
                f"–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ 20 –º–∏–Ω—É—Ç.")

    def accept_order_shipping_by_admin(self, order_id: OrderId) -> str:
        return f"–ó–∞–∫–∞–∑ #{order_id} –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è.\n–†–∞—Å—á–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç 40 –º–∏–Ω—É—Ç."

    def wrong_phone_number(self) -> str:
        return ("‚õîÔ∏è –ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. "
                "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n–≤ —Ñ–æ—Ä–º–∞—Ç–µ: +998** *** ** **")

    def wrong_comment_length(self) -> str:
        return "‚õîÔ∏è –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–ø–∏—à–∏—Ç–µ —Ç–æ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –±–æ–ª–µ–µ –∫—Ä–∞—Ç–∫–æ"

    def no_comment(self) -> str:
        return "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ—Ç"

    def select_branches_attach_group(self) -> str:
        return "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª—ã –∫ –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –≥—Ä—É–ø–ø—É"

    def remind_promote_bot_to_admin(self) -> str:
        return ("–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å –º–µ–Ω—è –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á—Ç–æ–±—ã —è –±—ã–ª –ø–æ–ª–µ–∑–µ–Ω, "
                "–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª –∫–∞–∫–æ–π-–ª–∏–±–æ —Ñ–∏–ª–∏–∞–ª –≤–∞—à–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞!")

    def attached_group(self) -> str:
        return "–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∞ –∫ —Ñ–∏–ª–∏–∞–ª—É"

    def error_to_attach_group(self) -> str:
        return "–≠—Ç–∞ –≥—Ä—É–ø–ø–∞ —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∞"

    def detach_group(self) -> str:
        return "–ì—Ä—É–ø–ø–∞ –æ—Ç—Å–æ–µ–¥–∏–Ω–µ–Ω–∞"

    def empty_basket_error(self) -> str:
        return "–í –∫–æ—Ä–∑–∏–Ω–µ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç ‚õîÔ∏è"

    def critical_error(self) -> str:
        return "–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫..."
