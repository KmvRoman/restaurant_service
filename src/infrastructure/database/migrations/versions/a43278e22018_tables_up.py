"""tables up

Revision ID: a43278e22018
Revises: 
Create Date: 2023-11-25 20:23:19.264530

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a43278e22018'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('producttable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('mode', sa.Enum('default', 'extend', name='productmode'), nullable=False),
    sa.Column('status', sa.Enum('active', 'deleted', name='productstatus'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restauranttable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('token', sa.VARCHAR(length=500), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usertable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=13), nullable=True),
    sa.Column('member', sa.Enum('user', 'administrator', name='member'), nullable=False),
    sa.Column('language', sa.Enum('ru', 'uz', name='language'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('baskettable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.Enum('prepare', 'complete', 'reject', name='basketstatus'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['usertable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categoriestable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('restaurant_id', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restauranttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ordertable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=13), nullable=False),
    sa.Column('order_type', sa.Enum('shipping', 'pickup', name='ordertype'), nullable=False),
    sa.Column('amount', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.Enum('waiting', 'paid', 'accepted', name='orderstatus'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['usertable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productdescriptiontable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('product_id', sa.BIGINT(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), nullable=False),
    sa.Column('language', sa.Enum('ru', 'uz', name='language'), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['producttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productimagetable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('product_id', sa.BIGINT(), nullable=False),
    sa.Column('image', sa.VARCHAR(length=500), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['producttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productnametable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('product_id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('language', sa.Enum('ru', 'uz', name='language'), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['producttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productpricetable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('product_id', sa.BIGINT(), nullable=False),
    sa.Column('price', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['producttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurantbannertable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('restaurant_id', sa.BIGINT(), nullable=False),
    sa.Column('banner_url', sa.VARCHAR(length=500), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restauranttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurantlocationstable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('restaurant_id', sa.BIGINT(), nullable=False),
    sa.Column('address', sa.VARCHAR(length=100), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restauranttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurantnamedescriptiontable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('restaurant_id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), nullable=False),
    sa.Column('language', sa.Enum('ru', 'uz', name='language'), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restauranttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('telegramusertable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('telegram_id', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.Enum('active', 'block', name='telegramstatus'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['usertable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('categorynametable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('category_id', sa.BIGINT(), nullable=False),
    sa.Column('category', sa.VARCHAR(length=255), nullable=False),
    sa.Column('language', sa.Enum('ru', 'uz', name='language'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categoriestable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grouptable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('restaurant_location_id', sa.BIGINT(), nullable=False),
    sa.Column('group_id', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_location_id'], ['restaurantlocationstable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menuproducttable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('location_id', sa.BIGINT(), nullable=False),
    sa.Column('category_id', sa.BIGINT(), nullable=False),
    sa.Column('product_id', sa.BIGINT(), nullable=False),
    sa.Column('status', sa.Enum('available', 'not_available', name='menuproductstatus'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categoriestable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['restaurantlocationstable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['producttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paymenttable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('order_id', sa.BIGINT(), nullable=False),
    sa.Column('payment_type', sa.Enum('cache', 'card', name='paymenttype'), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['ordertable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productbaskettable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('basket_id', sa.BIGINT(), nullable=False),
    sa.Column('product_id', sa.BIGINT(), nullable=False),
    sa.Column('count', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['basket_id'], ['baskettable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['producttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productordertable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('order_id', sa.BIGINT(), nullable=False),
    sa.Column('product_id', sa.BIGINT(), nullable=False),
    sa.Column('count', sa.INTEGER(), nullable=False),
    sa.Column('price', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['ordertable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['producttable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productpricenametable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('price_id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('language', sa.Enum('ru', 'uz', name='language'), nullable=False),
    sa.ForeignKeyConstraint(['price_id'], ['productpricetable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shippingordertable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('order_id', sa.BIGINT(), nullable=False),
    sa.Column('address', sa.VARCHAR(length=100), nullable=False),
    sa.Column('comment', sa.VARCHAR(length=255), nullable=False),
    sa.Column('shipping_length', sa.FLOAT(), nullable=False),
    sa.Column('total_amount', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['ordertable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productbasketmodificationtable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('product_basket_id', sa.BIGINT(), nullable=False),
    sa.Column('modification', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['modification'], ['productpricetable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_basket_id'], ['productbaskettable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shippinglocationtable',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, cache=1), nullable=False),
    sa.Column('shipping_id', sa.BIGINT(), nullable=False),
    sa.Column('latitude', sa.FLOAT(), nullable=False),
    sa.Column('longitude', sa.FLOAT(), nullable=False),
    sa.ForeignKeyConstraint(['shipping_id'], ['shippingordertable.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shippinglocationtable')
    op.drop_table('productbasketmodificationtable')
    op.drop_table('shippingordertable')
    op.drop_table('productpricenametable')
    op.drop_table('productordertable')
    op.drop_table('productbaskettable')
    op.drop_table('paymenttable')
    op.drop_table('menuproducttable')
    op.drop_table('grouptable')
    op.drop_table('categorynametable')
    op.drop_table('telegramusertable')
    op.drop_table('restaurantnamedescriptiontable')
    op.drop_table('restaurantlocationstable')
    op.drop_table('restaurantbannertable')
    op.drop_table('productpricetable')
    op.drop_table('productnametable')
    op.drop_table('productimagetable')
    op.drop_table('productdescriptiontable')
    op.drop_table('ordertable')
    op.drop_table('categoriestable')
    op.drop_table('baskettable')
    op.drop_table('usertable')
    op.drop_table('restauranttable')
    op.drop_table('producttable')
    # ### end Alembic commands ###
    sa.Enum(name="language").drop(op.get_bind())
    sa.Enum(name="member").drop(op.get_bind())
    sa.Enum(name="productmode").drop(op.get_bind())
    sa.Enum(name="menuproductstatus").drop(op.get_bind())
    sa.Enum(name="productstatus").drop(op.get_bind())
    sa.Enum(name="paymenttype").drop(op.get_bind())
    sa.Enum(name="orderstatus").drop(op.get_bind())
    sa.Enum(name="ordertype").drop(op.get_bind())
    sa.Enum(name="basketstatus").drop(op.get_bind())
    sa.Enum(name="telegramstatus").drop(op.get_bind())